library(readr)
order_products_train <- read_csv("~/Documents/GitHub/groceries/order_products__train.csv")
View(order_products_train)
rm(order_products_train)
library(readr)
order_products_train <- read_delim("~/Documents/GitHub/groceries/order_products__train.csv",
";", escape_double = FALSE, trim_ws = TRUE)
View(order_products_train)
library(readr)
products <- read_delim("~/Documents/GitHub/groceries/products.csv",
";", escape_double = FALSE, trim_ws = TRUE)
View(products)
?lookup
??lookup
library(plyr)
library(arules)
?transactions
??arules
??read.transactions
library(readr)
order_products_train <- read_delim("~/Documents/GitHub/groceries/order_products__train.csv",
";", escape_double = FALSE, trim_ws = TRUE)
View(order_products_train)
orders <- data.frame(orderID=order_prod$order_id, prod_name=order_prod$product_name)
setwd("~/Documents/GitHub/groceries")
library(arules)
orders <- data.frame(orderID=order_prod$order_id, prod_name=order_prod$product_name)
orders <- read_csv("~/Documents/GitHub/groceries/orders.csv")
library(readr)
orders <- read_csv("~/Documents/GitHub/groceries/orders.csv")
View(orders)
baskets<- read.transactions(file="~/Documents/GitHub/groceries/orders.csv",
format = "single",
sep = ";",
cols= c(1,2))
baskets<- read.transactions(file="~/Documents/GitHub/groceries/orders.csv",
format = "single",
sep = ";",
quote = "",
cols= c(1,2))
summary(baskets)
itemFrequency(baskets)
eclat(baskets, parameter = LIST(supp=0.07, maxlen=15))
eclat(baskets, parameter = list(supp=0.07, maxlen=15))
test1<-eclat(baskets, parameter = list(supp=0.07, maxlen=15))
inspect(test1)
test1<-eclat(baskets, parameter = list(supp=0.002, maxlen=15))
inspect(test1)
test1<-eclat(baskets, parameter = list(supp=0.05, maxlen=15))
inspect(test1)
itemFrequencyPlot(basket, top=10, type="freq", main="Item freq", col="light green")
itemFrequencyPlot(baskets, top=10, type="freq", main="Item freq", col="light green")
itemFrequencyPlot(baskets, top=10, type="relative", main="Item freq", col="light green")
itemFrequencyPlot(baskets, top=10, type="absolute", main="Item freq", col="light green")
itemFrequencyPlot(baskets, top=18, type="absolute", main="Item freq", col="light green")
itemFrequencyPlot(baskets, top=18, type="absolute", main="Item freq", col="#0296A5")
itemFrequencyPlot(baskets, top=12, type="absolute", main="Item freq", col="#0296A5")
??itemFrequencyPlot
itemFrequencyPlot(baskets, top=-12, type="absolute", main="Item freq", col="#0296A5")
itemFrequencyPlot(baskets, top=12, type="absolute", main="Item freq", col="#0296A5")
itemFrequencyPlot(baskets, bottom=12, type="absolute", main="Item freq", col="#0296A5")
itemFrequencyPlot(baskets, [12:22])
itemFrequencyPlot(baskets, [1:10])
itemFrequencyPlot((baskets) [1:10])
itemFrequencyPlot(baskets, top=12, type="absolute", main="Best Sellers", col="#0296A5")
rule1 <- apriori(baskets, parameter=list(supp=0.001, conf=0.5, maxlen=2))
rume1
rule1
rule1 <- apriori(baskets, parameter=list(supp=0.0001, conf=0.5, maxlen=2))
rule1
rule1 <- apriori(baskets, parameter=list(supp=0.0009, conf=0.5, maxlen=2))
rule1
inspect(rule1)
itemFrequencyPlot(baskets, top=15, type="absolute", main="Best Sellers", col="#0296A5")
itemFrequencyPlot(baskets, top=10, type="absolute", main="Best Sellers", col="#0296A5")
itemFrequencyPlot(baskets, top=12, type="absolute", main="Best Sellers", col="#0296A5")
itemFrequencyPlot(baskets, top=12, type="absolute", main="Best Sellers", color.gradient("#0296A5")
#Rule 1: supp:0.001, conf:0.5, maxlen=2
rule1 <- apriori(baskets, parameter=list(supp=0.0009, conf=0.5, maxlen=2))
rule1
inspect(rule1)
itemFrequencyPlot(baskets, top=12, type="absolute", main="Best Sellers", color.gradient("#0296A5")
#Rule 1: supp:0.001, conf:0.5, maxlen=2
rule1 <- apriori(baskets, parameter=list(supp=0.0009, conf=0.5, maxlen=2))
rule1
inspect(rule1)
itemFrequencyPlot(baskets, top=12, type="absolute", main="Best Sellers", col="#0296A5")
itemFrequencyPlot(baskets, top=12, type="absolute", main="Best Sellers Brio", col="#0296A5")
rule1 <- apriori(baskets, parameter=list(supp=0.0009, conf=0.5, maxlen=2))
inspect(rule1)
rule1 <- apriori(baskets, parameter=list(supp=0.0009, conf=0.5, maxlen=4))
inspect(rule1)
rule1 <- apriori(baskets, parameter=list(supp=0.0009, conf=0.5, maxlen=3))
inspect(rule1)
rule1 <- apriori(baskets, parameter=list(supp=0.0009, conf=0.5, maxlen=2))
inspect(rule1)
summary(orders)
summary(baskets)
itemFrequencyPlot(baskets, top=8, type="absolute", main="Best Sellers Brio", col="#0296A5")
itemFrequencyPlot(baskets, top=10, type="absolute", main="Best Sellers Brio", col="#0296A5")
inspect(rule1)
rule1 <- apriori(baskets, parameter=list(supp=0.0009, conf=0.5, maxlen=2))
inspect(rule1)
rule1 <- apriori(baskets, parameter=list(supp=0.0009, conf=0.5, maxlen=3))
rule1 <- apriori(baskets, parameter=list(supp=0.0009, conf=0.6, maxlen=3))
inspect(rule2)
rule1 <- apriori(baskets, parameter=list(supp=0.0009, conf=0.6, maxlen=4))
rule1 <- apriori(baskets, parameter=list(supp=0.0009, conf=0.6, maxlen=5))
inspect(rule2)
rule1 <- apriori(baskets, parameter=list(supp=0.0009, conf=0.5, maxlen=2))
inspect(rule1)
rule2 <- apriori(baskets, parameter=list(supp=0.0009, conf=0.6, maxlen=5))
inspect(rule2)
rule2 <- apriori(baskets, parameter=list(supp=0.0009, conf=0.5, maxlen=5))
inspect(rule2)
rule2 <- apriori(baskets, parameter=list(supp=0.0009, conf=0.55, maxlen=5))
inspect(rule2)
rule2 <- apriori(baskets, parameter=list(supp=0.0009, conf=0.45, maxlen=4))
inspect(rule2)
rule2 <- apriori(baskets, parameter=list(supp=0.0009, conf=0.48, maxlen=4))
inspect(rule2)
rule2 <- apriori(baskets, parameter=list(supp=0.0009, conf=0.50, maxlen=4))
inspect(rule2)
rule2 <- apriori(baskets, parameter=list(supp=0.001, conf=0.50, maxlen=4))
inspect(rule2)
rule2 <- apriori(baskets, parameter=list(supp=0.0015, conf=0.50, maxlen=4))
inspect(rule2)
rule2 <- apriori(baskets, parameter=list(supp=0.0015, conf=0.50, maxlen=3))
inspect(rule2)
rule2 <- apriori(baskets, parameter=list(supp=0.001, conf=0.55, maxlen=3))
inspect(rule2)
rule2 <- apriori(baskets, parameter=list(supp=0.001, conf=0.55, maxlen=5))
inspect(rule2)
rule2 <- apriori(baskets, parameter=list(supp=0.001, conf=0.55, maxlen=3))
inspect(rule2)
rule2 <- apriori(baskets, parameter=list(supp=0.001, conf=0.55, maxlen=4))
inspect(rule2)
rule2 <- apriori(baskets, parameter=list(supp=0.01, conf=0.40, maxlen=4))
inspect(rule2)
rule2 <- apriori(baskets, parameter=list(supp=0.01, conf=0.40, maxlen=4))
rule2 <- apriori(baskets, parameter=list(supp=0.01, conf=0.30, maxlen=4))
inspect(rule2)
rule2 <- apriori(baskets, parameter=list(supp=0.01, conf=0.30, maxlen=5))
inspect(rule2)
rule2 <- apriori(baskets, parameter=list(supp=0.009, conf=0.30, maxlen=5))
rule2 <- apriori(baskets, parameter=list(supp=0.009, conf=0.52, maxlen=5))
inspect(rule2)
rule2 <- apriori(baskets, parameter=list(supp=0.009, conf=0.51, maxlen=5))
inspect(rule2)
rules_conf <- sort (rule1, by="confidence", decreasing=TRUE)
inspect(head(rules_conf))
rule1 <- apriori(baskets, parameter=list(supp=0.0005, conf=0.1, maxlen=4))
inspect(rule1)
rule1 <- apriori(baskets, parameter=list(supp=0.009, conf=0.5, maxlen=4))
rules_conf <- sort (rule0, by="confidence", decreasing=TRUE)
inspect(head(rules_conf))
rule0 <- apriori(baskets, parameter=list(supp=0.001, conf=0.1, maxlen=4))
rules_conf <- sort (rule0, by="confidence", decreasing=TRUE)
inspect(head(rules_conf))
rule0 <- apriori(baskets, parameter=list(supp=0.0001, conf=0.2, maxlen=5))
rules_conf <- sort (rule0, by="confidence", decreasing=TRUE)
inspect(head(rules_conf))
rule0 <- apriori(baskets, parameter=list(supp=0.001, conf=0.2, maxlen=5))
rules_conf <- sort (rule0, by="confidence", decreasing=TRUE)
inspect(head(rules_conf))
rule0 <- apriori(baskets, parameter=list(supp=0.005, conf=0.1, maxlen=5))
rules_conf <- sort (rule0, by="confidence", decreasing=TRUE)
inspect(head(rules_conf))
rule0 <- apriori(baskets, parameter=list(supp=0.005, conf=0.05, maxlen=5))
rules_conf <- sort (rule0, by="confidence", decreasing=TRUE)
inspect(head(rules_conf))
rule0 <- apriori(baskets, parameter=list(supp=0.005, conf=0.30, maxlen=5))
rules_conf <- sort (rule0, by="confidence", decreasing=TRUE)
inspect(head(rules_conf))
rules_conf <- sort (rule0, by="confidence", decreasing=TRUE)
inspect(head(rules_conf))
rule0 <- apriori(baskets, parameter=list(supp=0.002, conf=0.25, maxlen=5))
rules_lift <- sort(rule0, by=lift, decreasing=TRUE)
rule0 <- apriori(baskets, parameter=list(supp=0.002, conf=0.25, maxlen=5))
rules_lift <- sort(rule0, by="lift", decreasing=TRUE)
inspect(head(rules_lift))
rule0 <- apriori(baskets, parameter=list(supp=0.002, conf=0.15, maxlen=5))
rules_lift <- sort(rule0, by="lift", decreasing=TRUE)
inspect(head(rules_lift))
rule0 <- apriori(baskets, parameter=list(supp=0.001, conf=0.15, maxlen=5))
rules_lift <- sort(rule0, by="lift", decreasing=TRUE)
inspect(head(rules_lift))
inspect(rules_lift))
inspect(rules_lift)
rule0 <- apriori(baskets, parameter=list(supp=0.002, conf=0.15, maxlen=5))
inspect(rules_lift))
inspect(rules_lift)
rule0 <- apriori(baskets, parameter=list(supp=0.002, conf=0.25, maxlen=5))
rule0 <- apriori(baskets, parameter=list(supp=0.002, conf=0.25, maxlen=4))
rules_lift <- sort(rule0, by="lift", decreasing=TRUE)
inspect(rules_lift)
rule0 <- apriori(baskets, parameter=list(supp=0.002, conf=0.35, maxlen=4))
rules_lift <- sort(rule0, by="lift", decreasing=TRUE)
inspect(rules_lift)
inspect(rules_conf))
inspect(rules_conf)
rules_conf <- sort (rule0, by="confidence", decreasing=TRUE)
inspect(rules_conf)
rule0 <- apriori(baskets, parameter=list(supp=0.002, conf=0.45, maxlen=4))
rules_lift <- sort(rule0, by="lift", decreasing=TRUE)
inspect(rules_lift)
itemFrequencyPlot(baskets, top=20, type="absolute", main="Best Sellers Brio", col="#0296A5")
milk <- apriori (data=baskets, parameter=list (supp=0.001,conf = 0.08), appearance = list (default="lhs",rhs="Organic Whole Milk"), control = list (verbose=F))
inspect(milk)
rules_lift_milk <- sort(milk, by="lift", decreasing=TRUE)
inspect(rules_lift_milk)
milk <- apriori (data=baskets, parameter=list (supp=0.0014,conf = 0.08),
appearance = list (default="lhs",rhs="Organic Whole Milk"), control = list (verbose=F))
rules_lift_milk <- sort(milk, by="lift", decreasing=TRUE)
inspect(rules_lift_milk)
milk <- apriori (data=baskets, parameter=list (supp=0.001,conf = 0.08),
appearance = list (default="lhs",rhs="Organic Whole Milk"), control = list (verbose=F))
rules_lift_milk <- sort(milk, by="lift", decreasing=TRUE)
inspect(rules_lift_milk)
milk <- apriori (data=baskets, parameter=list (supp=0.001,conf = 0.12),
appearance = list (default="lhs",rhs="Organic Whole Milk"), control = list (verbose=F))
rules_lift_milk <- sort(milk, by="lift", decreasing=TRUE)
inspect(rules_lift_milk)
itemFrequencyPlot(baskets, top=25, type="absolute", main="Best Sellers Brio", col="#0296A5")
itemFrequencyPlot(baskets, top=35, type="absolute", main="Best Sellers Brio", col="#0296A5")
itemFrequencyPlot(baskets, top=55, type="absolute", main="Best Sellers Brio", col="#0296A5")
milk <- apriori (data=baskets, parameter=list (supp=0.001,conf = 0.12),
appearance = list (default="lhs",rhs="100% Whole Wheat Bread"), control = list (verbose=F))
bread <- apriori (data=baskets, parameter=list (supp=0.001,conf = 0.12),
appearance = list (default="lhs",rhs="100% Whole Wheat Bread"), control = list (verbose=F))
inspect(bread)
rules_lift_bread <- sort(bread, by="lift", decreasing=TRUE)
inspect(rules_lift_bread)
bread <- apriori (data=baskets, parameter=list (supp=0.001,conf = 0.12),
appearance = list (default="lhs",rhs="100% Whole Wheat Bread"), control = list (verbose=F))
bread <- apriori (data=baskets, parameter=list (supp=0.001,conf = 0.10),
appearance = list (default="lhs",rhs="100% Whole Wheat Bread"), control = list (verbose=F))
inspect(bread)
bread <- apriori (data=baskets, parameter=list (supp=0.001,conf = 0.00),
appearance = list (default="lhs",rhs="100% Whole Wheat Bread"), control = list (verbose=F))
inspect(bread)
bread <- apriori (data=baskets, parameter=list (supp=0.001,conf = 0.03),
appearance = list (default="lhs",rhs="100% Whole Wheat Bread"), control = list (verbose=F))
inspect(bread)
rules_lift_bread <- sort(bread, by="lift", decreasing=TRUE)
inspect(rules_lift_bread)
itemFrequencyPlot(baskets, top=12, type="absolute", main="Best Sellers Brio", col="#0296A5")
